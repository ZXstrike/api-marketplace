version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: marketplace_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # Optional: Mount init scripts if needed
      # - ./scripts/db_init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432" # Expose for local access if needed, remove for production
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    container_name: marketplace_redis
    restart: unless-stopped
    # command: redis-server --requirepass ${REDIS_PASSWORD} # Uncomment if using password
    ports:
      - "6379:6379" # Expose for local access if needed, remove for production
    networks:
      - app-network

  api-gateway:
    container_name: api_gateway
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "${GATEWAY_PORT}:${GATEWAY_PORT}" # Expose gateway port
    depends_on:
      - redis # Gateway might need Redis for rate limiting
    networks:
      - app-network
    volumes:
      - ./api-gateway:/app # Mount code for development hot-reloading (optional)

  # marketplace-app:
  #   container_name: marketplace_app
  #   build:
  #     context: ./marketplace-app
  #     dockerfile: Dockerfile
  #   restart: unless-stopped
  #   env_file:
  #     - .env
  #   ports:
  #     - "${APP_PORT}:${APP_PORT}" # Expose app port (might not be needed externally)
  #   depends_on:
  #     db:
  #       condition: service_healthy # Wait for DB to be ready (requires HEALTHCHECK in db service)
  #     redis:
  #       condition: service_started # Wait for Redis to start
  #   networks:
  #     - app-network
  #   volumes:
  #     - ./marketplace-app:/app # Mount code for development hot-reloading (optional)

  # Add frontend service later when you build it
  # frontend:
  #   container_name: marketplace_frontend
  #   build:
  #     context: ./frontend-app
  #     dockerfile: Dockerfile
  #   ports:
  #     - "8082:80" # Example: Map host 8082 to container port 80 (Nginx)
  #   depends_on:
  #     - marketplace-app
  #   networks:
  #     - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge

