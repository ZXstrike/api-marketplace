version: '3.8'

services:
  api-gateway:
    build:
      context: .
      dockerfile: ./api-gateway/dockerfile
    image: api-gateway:prod
    restart: always
    environment:
      - ENV=production
    depends_on:
      - marketplace-app
    networks:
      - backend

  marketplace-app:
    build:
      context: .
      dockerfile: ./marketplace-app/dockerfile
    image: marketplace-app:prod
    restart: always
    ports:
      - "8080:8080"
    environment:
      - ENV=production
    depends_on:
      - postgres
      - redis
    networks:
      - backend

  marketplace-web:
    build:
      context: ./marketplace-web
      dockerfile: dockerfile
    image: marketplace-web:prod
    restart: always
    environment:
      - NODE_ENV=production
    networks:
      - backend

  postgres:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DATABASE}
    volumes:
      - /home/tamaki/docker-persistent-data/api-market/postgres:/var/lib/postgresql/data
    networks:
      - backend

  redis:
    image: redis:7-alpine
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - /home/tamaki/docker-persistent-data/api-market/redis-data:/data
    networks:
      - backend

  nginx:
    image: nginx:latest
    container_name: my-nginx-proxy
    ports:
      - "80:80"
      # - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      # - ./certs:/etc/nginx/certs:ro
    restart: unless-stopped
    depends_on:
      - api-gateway
      - marketplace-web
    networks:
      - backend

networks:
  backend:
    driver: bridge