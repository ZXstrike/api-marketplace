version: '3.8'
services:
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    image: api-gateway:prod
    restart: always
    environment:
      - ENV=production
    depends_on:
      - marketplace-app
      - postgres
      - redis
    ports:
      - "8080:8080"
    networks:
      - backend

  marketplace-app:
    build:
      context: ./marketplace-app
      dockerfile: Dockerfile
    image: marketplace-app:prod
    restart: always
    environment:
      - ENV=production
    depends_on:
      - postgres
      - redis
    ports:
      - "8081:8081"
    networks:
      - backend

  marketplace-web:
    build:
      context: ./marketplace-web
      dockerfile: Dockerfile
    image: marketplace-web:prod
    restart: always
    environment:
      - NODE_ENV=production
    ports:
      - "5173:80"
    networks:
      - backend

  postgres:
    image: postgres:16-alpine
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: marketplace
    volumes:
      - ./persistent/postgres-data:/var/lib/postgresql/data
    networks:
      - backend

  redis:
    image: redis:7-alpine
    restart: always
    volumes:
      - ./persistent/redis-data:/data
    networks:
      - backend

  nginx:
    image: nginx:alpine
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    depends_on:
      - api-gateway
      - marketplace-web
    networks:
      - backend

networks:
  backend:
    driver: bridge
