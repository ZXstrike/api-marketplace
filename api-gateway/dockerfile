# ---- Build Stage ----
FROM golang:1.24-alpine AS builder
WORKDIR /app

# Copy workspace and module files
COPY go.work go.work.sum ./
COPY api-gateway/ ./api-gateway/
COPY marketplace-app/ ./marketplace-app/
COPY shared/ ./shared/

# Copy config and secret files needed for the final image
COPY .env .
COPY shared/secrets/ ./secrets/

# Build the application
RUN CGO_ENABLED=0 GOOS=linux go build -ldflags="-w -s" -o /app/bin/gateway ./api-gateway/cmd


# ---- Final Stage ----
FROM alpine:3.20

WORKDIR /app

# Create a non-root user and group for security
RUN addgroup -S appgroup && adduser -S appuser -G appgroup

# Copy ONLY necessary files from the builder stage and set correct ownership
# This --chown flag is the definitive fix for the 'permission denied' error.
COPY --from=builder --chown=appuser:appgroup /app/bin/gateway .
COPY --from=builder --chown=appuser:appgroup /app/.env .
COPY --from=builder --chown=appuser:appgroup /app/secrets/ ./secrets/

# Switch to the non-root user to run the application
USER appuser

# Expose the port the application will run on (e.g., 8080)
EXPOSE 8080 

# The command to run the application
CMD ["./gateway"]